import CircleRating from '@/components/shared/circleRating/circleRating';
import {OnlyHeading} from '@/components/shared/headingLink/headingLink';
import MainContainer from '@/components/shared/mainContainer/mainContainer';
import { enviourment } from 'next.config';
import Head from 'next/head';
import Image from 'next/image';
import Moment from 'react-moment';
import Carousel from "react-elastic-carousel";
const PopularDetails = ({MovieDetails, MovieDetailsTrailer, MovieDetailsKeywords})=>{
    const ratingava = ()=>{
        return(
            MovieDetails.vote_average * 10
        )
    }
    const breakPoints = [
        { width: 1, itemsToShow: 3 },
        { width: 550, itemsToShow: 3 },
        { width: 768, itemsToShow: 3 },
        { width: 1200, itemsToShow: 4 },
      ];
    
    return(
        <>
            <Head>
                <title>Home::Media</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <meta name="keywords"></meta>
                <link rel="icon" href="/favicon.ico" />
            </Head>                
            <div className="inner_movie_hero_wrapper">
                <Image className='backdrop' src={`${enviourment.image_base_url}/original${MovieDetails.backdrop_path}`} fill={true}  />
                <MainContainer>
                    <div className="main_area_content d-flex justify-content-between">
                        <div className="movie_avator_back">
                            <Image alt={MovieDetails.title} src={`${enviourment.image_base_url}/w400${MovieDetails.poster_path}`} fill={true}  />
                        </div>
                        <div className="content_area d-flex flex-column">
                            <h1>{MovieDetails.title}</h1>
                            <ul className= "widget mb d-flex">
                                <li>
                                    <div className="circle_rating inner">
                                        <CircleRating
                                            rating={Math.floor(ratingava().toFixed(1))}
                                        />
                                    </div>
                                </li>
                                <li className='d-flex align-items-center'>
                                    <Image alt="icon" src="/images/date.png" fill={true}  />
                                    <Moment format="Do, MMMM YYYY">
                                        {MovieDetails.release_date}
                                    </Moment> 
                                </li>
                                <li className='d-flex align-items-center'>
                                    <Image alt="icon" src="/images/earth.png" fill={true}  />
                                    {
                                            MovieDetails.production_countries.map((item, i)=>{
                                                return(
                                                    <>

                                                        <span key={i}>{item.iso_3166_1}, </span>
                                                    </>
                                                )
                                            })
                                        }
                                    
                                </li>
                                <li className='d-flex align-items-center'>
                                    <Image alt="icon" src="/images/music-notes.png" fill={true}  />
                                    {
                                            MovieDetails.genres.map((item, i)=>{
                                                return(
                                                    <>
                                                        <span key={i}>{item.name}, </span>
                                                    </>
                                                )
                                            })
                                        }
                                </li>
                                <li className='d-flex align-items-center star'><Image src="/images/star.png" fill={true} alt="icon" /> {MovieDetails.vote_average}/10</li>
                                <li className='d-flex align-items-center'><Image alt="icon" src="/images/like.png" fill={true} /> {MovieDetails.vote_count}</li>
                            </ul>
                            
                            <p>Tagline: <span className='highlight'>{MovieDetails.tagline}</span></p>
                            <h3>Overview</h3>
                            <p>{MovieDetails.overview}</p>
                            {
                                MovieDetailsKeywords.keywords.length > 0 ? 
                                <div>
                                    <h3>Tags</h3>
                                    <div className="tags">
                                        {
                                            MovieDetailsKeywords.keywords.map((item,i)=>{
                                                return(
                                                    <span key={i}>{item.name}</span>
                                                )
                                            })
                                        }
                                    </div>
                                </div> :
                                ""
                            }
                            
                        </div>
                    </div>
                </MainContainer>
            </div>
            <div className="inner_movie_body_details">
                <MainContainer>
                    <div className="trailers_details d-flex justify-content-center">
                        <div className="heading_area">
                            <OnlyHeading
                                mainTitle="Movie Trailer" 
                                extraText="to" 
                                highlightedTtile="Watch Now"
                                descriptionText="Most watched movies by days"
                            />
                            
                        </div>
                        <ul className="details d-flex flex-wrap">
                            <Carousel breakPoints={breakPoints}>
                                {
                                    MovieDetailsTrailer.results.map((item,i)=>{
                                        return(
                                            <li key={i}>
                                                <iframe width="560" height="315" src={`https://www.youtube.com/embed/${item.key}`} title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
                                            </li>
                                        )
                                    })
                                }
                            </Carousel>
                        </ul>
                    </div>
                </MainContainer>
                
                
            </div>
        </>
    )
}


export default PopularDetails


export async function getServerSideProps(context){
    const {params} = context;
    const responssMoviePopular = await fetch(`${enviourment.apiUrl}/movie/${params.movieId}?api_key=${enviourment.tmdbApiKey}`);
    const responssMovieVideo = await fetch(`${enviourment.apiUrl}/movie/${params.movieId}/videos?api_key=${enviourment.tmdbApiKey}`);
    const responssMovieKeywords = await fetch(`${enviourment.apiUrl}/movie/${params.movieId}/keywords?api_key=${enviourment.tmdbApiKey}`);
    const MoviePopularData = await responssMoviePopular.json();
    const MoviePopularTrailerData = await responssMovieVideo.json();
    const MoviePopularKeywordsData = await responssMovieKeywords.json();
    return{
      props:{
        MovieDetails: MoviePopularData,
        MovieDetailsTrailer:  MoviePopularTrailerData,
        MovieDetailsKeywords:  MoviePopularKeywordsData
      }
    }
  }